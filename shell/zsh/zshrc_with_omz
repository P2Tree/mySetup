# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/hanhuijie/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
#ZSH_THEME="refined"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  zsh-syntax-highlighting
  zsh-autosuggestions
  z
)

source $ZSH/oh-my-zsh.sh

# User configuration

export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'

# for zsh-autosuggestions
source ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
bindkey '?' autosuggest-accept

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="${EDITOR} ~/.zshrc"
alias ohmyzsh="${EDITOR} ~/.oh-my-zsh"
alias vimconfig="${EDITOR} ~/.vimrc"
alias zshreload="source ~/.zshrc"

alias cp="cp -i"
alias rm="rm -i"
alias mv="mv -i"
alias q="exit"

alias vi="nvim"
alias vim="nvim"
alias vimdiff="nvim -d"

alias gst="git status"
alias gs="git stash"
alias ga="git add"
alias gd="git diff"
alias gl="git log"
alias gls="git log --stat"
alias glp="git log --patch"
alias glg="git log --grep"
alias gla="git log --author"
alias gc="git commit"
alias gca="git commit -a"
alias go="git checkout"
alias gb="git branch"

if [[ -x "`which lsd`" ]]; then
  alias ls="lsd"
fi

if [[ -f ~/.fzf.zsh ]]; then
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  if [[ `command -v fd` ]];then
    # use fd as finder, enable hidden file and directory
    # no ignored by .gitignore file
    export FZF_DEFAULT_COMMAND='fd -H -I --type file'
  else
    export FZF_DEFAULT_COMMAND='find . -type f'
  fi

  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS="--height 99% -e --preview \
    '(bat --style=numbers --color=always {} ||  highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null ' \
    --preview-window up,50%,border-horizontal \
    --color 'fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899'"

  ## vim powered by fzf
  alias fvi='vim $(fzf)'

  ## ps powered by fzf
  fkp () {
    local pid=$(ps -ef | sed 1d | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[kill:process]'" | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
      echo $pid | xargs kill -${1:-9}
      fkp
    fi
  }

  ## Git powered by fzf
  local is_in_git_repo() {
      # git rev-parse HEAD > /dev/null 2>&1
      git rev-parse HEAD > /dev/null
  }
  # Filter branches.
  fgb() {
      is_in_git_repo || return

      local tags branches target
      tags=$(
      git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
      branches=$(
      git branch --all | grep -v HEAD |
          sed "s/.* //" | sed "s#remotes/[^/]*/##" |
          sort -u | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
      target=$(
      (echo "$tags"; echo "$branches") |
          fzf --no-hscroll --no-multi --delimiter="\t" -n 2 \
          --ansi --preview="git log -200 --pretty=format:%s $(echo {+2..} |  sed 's/$/../' )" ) || return
      echo $(echo "$target" | awk -F "\t" '{print $2}')
  }
  # Filter branches and checkout the selected one with <enter> key,
  fgo() {
      is_in_git_repo || return
      git checkout $(fgb)
  }
  # Filter commit logs. The diff is shown on the preview window.
  fgl() { # fshow - git commit browser
      is_in_git_repo || return

      _gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
      _viewGitLogLine="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always %'"
      git log --graph --color=always \
      --format="%C(auto)%h%d [%an] %s %C(black)%C(bold)%cr" "$@" |
      fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --preview="$_viewGitLogLine" \
      --bind "ctrl-m:execute:
          (grep -o '[a-f0-9]\{7\}' | head -1 |
          xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
          {}
  FZF-EOF"
  }
fi

# User configuration

if [[ -a ~/.local.zshrc ]]; then
  source ~/.local.zshrc
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Start tmux
if [[ "`tty`" != "not a tty" && -z "${TMUX}" && -o login ]]; then
  tmux -V > /dev/null 2>&1
  if [[ $? == 0 ]]; then
    echo "ﱘ Current tmux sessions:"
    tmux ls
    if [[ $? == 0 ]]; then
      echo -n "ﱘ Select a tmux session name or create new session (Leave empty without tmux launch):"
      read line
      if [[ -z "$line" ]]; then
        unset line
        clear
      else
        exec `tmux a -t $line`
        unset line
      fi
    else
      echo -n "ﱘ Create new tmux session? (y/n) "
      read input
      if [[ $input == 'y' || $input == 'Y' ]]; then
        unset input
        exec `tmux`
      else
        unset input
        clear
      fi
    fi
  else
    echo "Warning: tmux can't work well, won't launch it!"
  fi
fi
