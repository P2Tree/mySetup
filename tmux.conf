### This tmux configuration is useful at tmux 3.2a version

## === Easy config reload ===
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# warning that some config must restart tmux server can take effect
# 1. restart the tmux server. after killing the current tmux session, run `$ tmux kill-server`
# 2. start a new one by run `$ tmux -Lx`
# 3. detach your tmux client by run `$ tmux detach-client` and re-attach it by `$ tmux attach-session`

## === Basic settings ===
# scrollback buffer
set -g history-limit 100000
set -g display-time 5000
set -g repeat-time 0
set -g display-panes-time 1500

# renumber window list from 1 (not 0)
set -g renumber-windows on

# set window notifications
set -wg monitor-activity on
# set -wg visual-activity on  # will show message instead of bell

# change default prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Mouse mode (tmux 2.1 update)
set -g mouse on

# Escape time
set -g escape-time 10

# Focus events which help for vim autoread
set -g focus-events on

## === About Windows ===
# Set easier window split keys
bind - split-window -p 50 -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of
# any client connected to *that window*. Much more reasonable.
set -wg aggressive-resize on

# change to next window
bind -n S-Right next-window
bind -n S-Left previous-window

## === About Panes ===
# use Alt-arrow keys to switch panes
# if don't use neovim tmux.nvim, use this {
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D
# } else {

# navigation between tmux panel and neovim panel
# (MUST: neovim needs to install tmux.nvim plugin)
# keybind in neovim shell be same as below
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-Left if-shell "$is_vim" 'send-keys C-Left' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind -n C-Right if-shell "$is_vim" 'send-keys C-Right' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind -n C-Up if-shell "$is_vim" 'send-keys C-Up' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind -n C-Down if-shell "$is_vim" 'send-keys C-Down' { if -F '#{pane_at_down}' '' 'select-pane -D' }
bind -T copy-mode-vi 'C-Left' if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi 'C-Right' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -T copy-mode-vi 'C-Up' if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi 'C-Down' if -F '#{pane_at_down}' '' 'select-pane -D'
# }

# panes index start at 1
set -g base-index 1
set -wg pane-base-index 1

# pane border style highlight
# set -g pane-active-border-style "bg=black"
# set -ag pane-active-border-style "fg=red"

# panel background color changed follow active/inactive status
set -g window-style 'fg=grey62,bg=grey19'
set -g window-active-style 'fg=terminal,bg=terminal' # follow the terminal

## === About Copy ===
# press shift and use terminal default copy and paste method

## === About Status Bar ===

# turn status bar on
set -g status on

# auto rename window name with current path
set -wg allow-rename on

# auto rename new window
set -wg automatic-rename on

# use 256 colors
set -g default-terminal "screen-256color"
# support true-color (make sure your terminal also support it)
set -ga terminal-overrides ",*256col*:Tc"

# change front and background color
# set -g status-bg black
# set -g status-fg white
set -g status-style bg=default

# alignment
set -g status-justify centre

# lower left corner
set -g status-left-length 20
set -g status-left '#[fg=green][ #[fg=cyan]󰈻 #[fg=blue]#S #[fg=cyan]󱂬 #[fg=blue]#I #[fg=cyan] #[fg=blue]#P #[fg=green]]'

# window list
set -wg window-status-format '#[dim] #I:#W #[default]'
set -wg window-status-current-format '#[fg=green][#[fg=cyan,bold] #I:#[fg=blue]#W #[fg=green,nobold]]'
set -wg window-status-activity-style 'blink'

# lower right corner
set -g status-right '#[fg=green][ #[fg=cyan] #[fg=blue]#(TZ="Asia/Shanghai" date "+ %%m-%%d %%H:%%M") #[fg=green]]'

# NeoVim capability
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
# Ss and Se means set or reset the cursor style. If set, a sequence such as this may be used to change
# the cursor
# Try to see `:h tui-cursor-tmux`

## === Add extra plugins ===
# Goto https://github.com/tmux-plugins/ to find more plugins

# yank and paste (optional: neovim install tmux.nvim plugin, it can support yank/paste between neovim and tmux)
run-shell ~/tmux-plugins/tmux-yank/yank.tmux


